C51 COMPILER V9.56.0.0   COMMON                                                            11/12/2020 12:57:59 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE COMMON
OBJECT MODULE PLACED IN .\Output\Common.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE Source\Common.c ROM(COMPACT) OPTIMIZE(8,SPEED) BROWSE INCDIR(..\..\Inclu
                    -de;.\Source) DEBUG OBJECTEXTEND PRINT(.\LST\Common.lst) TABS(2) OBJECT(.\Output\Common.obj)

line level    source

   1          /*--------------------------------------------------------------------------------------------------------
             --*/
   2          /*                                                                                                        
             - */
   3          /* Copyright(c) 2016 Nuvoton Technology Corp. All rights reserved.                                        
             - */
   4          /*                                                                                                        
             - */
   5          /*--------------------------------------------------------------------------------------------------------
             --*/
   6          
   7          //********************************************************************************************************
             -***
   8          //  Nuvoton Technoledge Corp. 
   9          //  Website: http://www.nuvoton.com
  10          //  E-Mail : MicroC-8bit@nuvoton.com
  11          //  Date   : Apr/21/2016
  12          //********************************************************************************************************
             -***
  13          
  14          #ifndef  OS_MASTER_FILE
  15          #define  OS_GLOBALS
  16          #include "includes.h"
  17          #endif
  18          
  19          
  20          /******************************************************************************
  21           * FUNCTION_PURPOSE: Serial interrupt, echo received data.
  22           * FUNCTION_INPUTS : P0.7(RXD) serial input
  23           * FUNCTION_OUTPUTS: P0.6(TXD) serial output
  24           * Following setting in Common.c
  25           ******************************************************************************/
  26          
  27          //----------------------------------------------------------------------------------
  28          // UART0 baud rate initial setting 
  29          //----------------------------------------------------------------------------------
  30          void InitialUART0_Timer1(UINT32 u32Baudrate)    //T1M = 1, SMOD = 1
  31          {
  32   1          P06_Quasi_Mode;   //Setting UART pin as Quasi mode for transmit
  33   1          P07_Quasi_Mode;   //Setting UART pin as Quasi mode for transmit
  34   1        
  35   1          SCON = 0x50;      //UART0 Mode1,REN=1,TI=1
  36   1          TMOD |= 0x20;     //Timer1 Mode1
  37   1          
  38   1          set_SMOD;         //UART0 Double Rate Enable
  39   1          set_T1M;
  40   1          clr_BRCK;         //Serial port 0 baud rate clock source = Timer1
  41   1       
  42   1      #ifdef FOSC_160000
  43   1          TH1 = 256 - (1000000/u32Baudrate+1);               /*16 MHz */
  44   1      #endif      
  45   1      #ifdef FOSC_166000
                  TH1 = 256 - (1037500/u32Baudrate);                 /*16.6 MHz */
              #endif
C51 COMPILER V9.56.0.0   COMMON                                                            11/12/2020 12:57:59 PAGE 2   

  48   1          set_TR1;
  49   1          set_TI;           //For printf function must setting TI = 1
  50   1      }
  51          //---------------------------------------------------------------
  52          void InitialUART0_Timer3(UINT32 u32Baudrate) //use timer3 as Baudrate generator
  53          {
  54   1          P06_Quasi_Mode;   //Setting UART pin as Quasi mode for transmit
  55   1          P07_Quasi_Mode;   //Setting UART pin as Quasi mode for transmit 
  56   1        
  57   1          SCON = 0x50;     //UART0 Mode1,REN=1,TI=1
  58   1          set_SMOD;        //UART0 Double Rate Enable
  59   1          T3CON &= 0xF8;   //T3PS2=0,T3PS1=0,T3PS0=0(Prescale=1)
  60   1          set_BRCK;        //UART0 baud rate clock source = Timer3
  61   1      
  62   1      #ifdef FOSC_160000
  63   1          RH3    = HIBYTE(65536 - (1000000/u32Baudrate)-1);     /*16 MHz */
  64   1          RL3    = LOBYTE(65536 - (1000000/u32Baudrate)-1);     /*16 MHz */
  65   1      #endif
  66   1      #ifdef FOSC_166000
                  RH3    = HIBYTE(65536 - (1037500/u32Baudrate));       /*16.6 MHz */
                  RL3    = LOBYTE(65536 - (1037500/u32Baudrate));       /*16.6 MHz */
              #endif
  70   1          set_TR3;         //Trigger Timer3
  71   1          set_TI;          //For printf function must setting TI = 1
  72   1      }
  73          
  74          UINT8 Receive_Data_From_UART0(void)
  75          {
  76   1          UINT8 c;
  77   1          while (!RI);
  78   1          c = SBUF;
  79   1          RI = 0;
  80   1          return (c);
  81   1      }
  82          
  83          void Send_Data_To_UART0 (UINT8 c)
  84          {
  85   1          TI = 0;
  86   1          SBUF = c;
  87   1          while(TI==0);
  88   1      }
  89          
  90          
  91          //----------------------------------------------------------------------------------
  92          // UART1 baud rate initial setting 
  93          //----------------------------------------------------------------------------------
  94          void InitialUART1_Timer3(UINT32 u32Baudrate) //use timer3 as Baudrate generator
  95          {
  96   1          P02_Quasi_Mode;   //Setting UART pin as Quasi mode for transmit
  97   1          P16_Quasi_Mode;   //Setting UART pin as Quasi mode for transmit
  98   1        
  99   1          SCON_1 = 0x50;    //UART1 Mode1,REN_1=1,TI_1=1
 100   1          T3CON = 0x08;     //T3PS2=0,T3PS1=0,T3PS0=0(Prescale=1), UART1 in MODE 1
 101   1          clr_BRCK;
 102   1        
 103   1      #ifdef FOSC_160000
 104   1          RH3    = HIBYTE(65536 - (1000000/u32Baudrate)-1);     /*16 MHz */
 105   1          RL3    = LOBYTE(65536 - (1000000/u32Baudrate)-1);     /*16 MHz */
 106   1      #endif
 107   1      #ifdef FOSC_166000
                  RH3    = HIBYTE(65536 - (1037500/u32Baudrate));       /*16.6 MHz */
                  RL3    = LOBYTE(65536 - (1037500/u32Baudrate));       /*16.6 MHz */
C51 COMPILER V9.56.0.0   COMMON                                                            11/12/2020 12:57:59 PAGE 3   

              #endif
 111   1          set_TR3;         //Trigger Timer3
 112   1      }
 113          
 114          UINT8 Receive_Data_From_UART1(void)
 115          {
 116   1          UINT8 c;
 117   1          
 118   1          while (!RI_1);
 119   1          c = SBUF_1;
 120   1          RI_1 = 0;
 121   1          return (c);
 122   1      }
 123          
 124          void Send_Data_To_UART1 (UINT8 c)
 125          {
 126   1          TI_1 = 0;
 127   1          SBUF_1 = c;
 128   1          while(TI_1==0);
 129   1      }
 130          
 131          /*==========================================================================*/
 132          #ifdef SW_Reset
              void SW_Reset(void)
              {
                  TA = 0xAA;
                  TA = 0x55;
                  set_SWRST;
              }
              #endif
 140          /*==========================================================================*/
 141          
 142          
 143          
 144          
 145          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    294    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       8
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
